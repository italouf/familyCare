# Generated by Django 4.2.20 on 2025-03-10 17:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonitoramentoSaude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(default=django.utils.timezone.now)),
                ('passos', models.IntegerField(blank=True, null=True)),
                ('horas_sono', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('calorias_gastas', models.IntegerField(blank=True, null=True)),
                ('frequencia_cardiaca_media', models.IntegerField(blank=True, null=True)),
                ('frequencia_cardiaca_repouso', models.IntegerField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoramentos_saude', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Monitoramento de Saúde',
                'verbose_name_plural': 'Monitoramentos de Saúde',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='MetaAgua',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_diaria_ml', models.IntegerField(default=2000, help_text='Meta diária em mililitros')),
                ('lembrete_ativo', models.BooleanField(default=True)),
                ('intervalo_lembretes', models.IntegerField(default=60, help_text='Intervalo em minutos')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta_agua', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meta de Água',
                'verbose_name_plural': 'Metas de Água',
            },
        ),
        migrations.CreateModel(
            name='ConsumoAgua',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(default=django.utils.timezone.now)),
                ('quantidade_ml', models.IntegerField(help_text='Quantidade em mililitros')),
                ('horario', models.TimeField(default=django.utils.timezone.now)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumos_agua', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consumo de Água',
                'verbose_name_plural': 'Consumos de Água',
                'ordering': ['-data', '-horario'],
            },
        ),
        migrations.CreateModel(
            name='AtividadeFisica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('musculacao', 'Musculação'), ('natacao', 'Natação'), ('caminhada', 'Caminhada'), ('artes_marciais', 'Artes Marciais'), ('outro', 'Outro')], max_length=20)),
                ('data', models.DateField(default=django.utils.timezone.now)),
                ('duracao', models.IntegerField(help_text='Duração em minutos')),
                ('calorias_gastas', models.IntegerField(blank=True, null=True)),
                ('descricao', models.TextField(blank=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atividades_fisicas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Atividade Física',
                'verbose_name_plural': 'Atividades Físicas',
                'ordering': ['-data'],
            },
        ),
    ]
